@using Microsoft.AspNetCore.Components.Authorization
@using NuevaPlantilla.Extensions
@inject NavigationManager Navigation


<CascadingAuthenticationState>
<Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
       
    </Found>
</Router>
</CascadingAuthenticationState>


@* @using Microsoft.AspNetCore.Components.Authorization
@using NuevaPlantilla.Extensions
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
        <Found Context="routeData">
            <AuthorizeView>
                <Authorized>
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
                </Authorized>
                <NotAuthorized>
                    <p class="alert alert-danger">No esta autorizado para ver esta pagina</p>
                </NotAuthorized>
            </AuthorizeView>
        </Found>
    </Router>
</CascadingAuthenticationState>
 *@


@* @using Microsoft.AspNetCore.Components.Authorization
@using NuevaPlantilla.Extensions
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="new[] { typeof(Client._Imports).Assembly }">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" >

                 <NotAuthorized>
                    @{
                        if(context.User.Identity?.IsAuthenticated != true)
                        {

                            <p class="alert alert-danger">No esta autorizado para ver esta pagina</p>
                            var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
                            if (!uri.AbsolutePath.Contains("/login", StringComparison.InvariantCultureIgnoreCase))
                            {
                                Navigation.NavigateTo("/login");
                            }                            
                        }
                        else
                        {
                            <p class="alert alert-danger">No esta autorizado para ver esta pagina</p>
                        }
                    }

                </NotAuthorized> 
            </AuthorizeRouteView>
        </Found>
    </Router>
    @* <SessionInitializer /> *@
@* </CascadingAuthenticationState> *@


 